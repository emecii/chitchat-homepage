{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { notification } from \"antd\";\nimport axios from \"axios\";\nexport const useForm = validate => {\n  _s();\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [shouldSubmit, setShouldSubmit] = useState(false);\n  const openNotificationWithIcon = () => {\n    notification[\"success\"]({\n      message: \"Success\",\n      description: \"Your message has been sent!\"\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    setErrors(validate(values));\n    // Your url for API\n    const url = \"\";\n    if (Object.values(values).every(x => x !== \"\")) {\n      axios.post(url, {\n        ...values\n      }).then(() => {\n        setShouldSubmit(true);\n      });\n    }\n  };\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && shouldSubmit) {\n      setValues(values => values = {\n        name: \"\",\n        email: \"\",\n        message: \"\"\n      });\n      openNotificationWithIcon();\n    }\n  }, [errors, shouldSubmit]);\n  const handleChange = event => {\n    event.persist();\n    setValues(values => ({\n      ...values,\n      [event.target.name]: event.target.value\n    }));\n    setErrors(errors => ({\n      ...errors,\n      [event.target.name]: \"\"\n    }));\n  };\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n_s(useForm, \"PzeaH78dr39MtgsUoeIylhi4Bow=\");","map":{"version":3,"names":["useState","useEffect","notification","axios","useForm","validate","_s","values","setValues","name","email","message","errors","setErrors","shouldSubmit","setShouldSubmit","openNotificationWithIcon","description","handleSubmit","event","preventDefault","url","Object","every","x","post","then","keys","length","handleChange","persist","target","value"],"sources":["/Users/emecii/Workspace/landy-react-template/src/common/utils/useForm.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { notification } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nexport const useForm = (validate: any) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [shouldSubmit, setShouldSubmit] = useState(false);\r\n\r\n  const openNotificationWithIcon = () => {\r\n    notification[\"success\"]({\r\n      message: \"Success\",\r\n      description: \"Your message has been sent!\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    setErrors(validate(values));\r\n    // Your url for API\r\n    const url = \"\";\r\n    if (Object.values(values).every((x) => x !== \"\")) {\r\n      axios\r\n        .post(url, {\r\n          ...values,\r\n        })\r\n        .then(() => {\r\n          setShouldSubmit(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && shouldSubmit) {\r\n      setValues((values) => (values = { name: \"\", email: \"\", message: \"\" }));\r\n      openNotificationWithIcon();\r\n    }\r\n  }, [errors, shouldSubmit]);\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n    setErrors((errors) => ({ ...errors, [event.target.name]: \"\" }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,MAAM;AACnC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,OAAO,GAAIC,QAAa,IAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC;IACnCS,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMgB,wBAAwB,GAAGA,CAAA,KAAM;IACrCd,YAAY,CAAC,SAAS,CAAC,CAAC;MACtBS,OAAO,EAAE,SAAS;MAClBM,WAAW,EAAE;IACf,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAIC,KAAyC,IAAK;IAClEA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBP,SAAS,CAACR,QAAQ,CAACE,MAAM,CAAC,CAAC;IAC3B;IACA,MAAMc,GAAG,GAAG,EAAE;IACd,IAAIC,MAAM,CAACf,MAAM,CAACA,MAAM,CAAC,CAACgB,KAAK,CAAEC,CAAC,IAAKA,CAAC,KAAK,EAAE,CAAC,EAAE;MAChDrB,KAAK,CACFsB,IAAI,CAACJ,GAAG,EAAE;QACT,GAAGd;MACL,CAAC,CAAC,CACDmB,IAAI,CAAC,MAAM;QACVX,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,CAAC;IACN;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,IAAIqB,MAAM,CAACK,IAAI,CAACf,MAAM,CAAC,CAACgB,MAAM,KAAK,CAAC,IAAId,YAAY,EAAE;MACpDN,SAAS,CAAED,MAAM,IAAMA,MAAM,GAAG;QAAEE,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAE,CAAC;MACtEK,wBAAwB,CAAC,CAAC;IAC5B;EACF,CAAC,EAAE,CAACJ,MAAM,EAAEE,YAAY,CAAC,CAAC;EAE1B,MAAMe,YAAY,GAChBV,KAAgE,IAC7D;IACHA,KAAK,CAACW,OAAO,CAAC,CAAC;IACftB,SAAS,CAAED,MAAM,KAAM;MACrB,GAAGA,MAAM;MACT,CAACY,KAAK,CAACY,MAAM,CAACtB,IAAI,GAAGU,KAAK,CAACY,MAAM,CAACC;IACpC,CAAC,CAAC,CAAC;IACHnB,SAAS,CAAED,MAAM,KAAM;MAAE,GAAGA,MAAM;MAAE,CAACO,KAAK,CAACY,MAAM,CAACtB,IAAI,GAAG;IAAG,CAAC,CAAC,CAAC;EACjE,CAAC;EAED,OAAO;IACLoB,YAAY;IACZX,YAAY;IACZX,MAAM;IACNK;EACF,CAAC;AACH,CAAC;AAACN,EAAA,CAxDWF,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}