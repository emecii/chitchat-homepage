{"ast":null,"code":"import _defineProperty from\"/Users/emecii/Workspace/landy-react-template/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/emecii/Workspace/landy-react-template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/Users/emecii/Workspace/landy-react-template/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/emecii/Workspace/landy-react-template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/emecii/Workspace/landy-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";import{notification}from\"antd\";import axios from\"axios\";export var useForm=function useForm(validate){var _useState=useState({name:\"\",email:\"\",message:\"\"}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),shouldSubmit=_useState6[0],setShouldSubmit=_useState6[1];var openNotificationWithIcon=function openNotificationWithIcon(){notification[\"success\"]({message:\"Success\",description:\"Your message has been sent!\"});};var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event){var apiKey,url,options,response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:event.preventDefault();setErrors(validate(values));apiKey=process.env.RAPID_API_KEY;console.log(\"api key is: \"+apiKey);url=\"\";if(!Object.values(values).every(function(x){return x!==\"\";})){_context.next=18;break;}// Configure the email sending options\noptions={method:'POST',url:'https://mail-sender-api1.p.rapidapi.com/',headers:{'content-type':'application/json','X-RapidAPI-Key':apiKey,'X-RapidAPI-Host':'mail-sender-api1.p.rapidapi.com'},data:{sendto:'evan@chitchat-ai.com',ishtml:'false',title:values.email+' - '+values.name+' - is interested in Chitchat',body:'Message: '+values.message+'\\n\\n'+'Email: '+values.email+'\\n\\n'+'Name: '+values.name+'\\n\\n'}};_context.prev=7;_context.next=10;return axios.request(options);case 10:response=_context.sent;console.log(response.data);setShouldSubmit(true);// Set form submit state on successful email send\n// Additional logic for handling success (like resetting the form) goes here\n_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](7);console.error(_context.t0);// Handle errors (like showing an error message) here\ncase 18:case\"end\":return _context.stop();}},_callee,null,[[7,15]]);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();useEffect(function(){if(Object.keys(errors).length===0&&shouldSubmit){setValues(function(values){return values={name:\"\",email:\"\",message:\"\"};});openNotificationWithIcon();}},[errors,shouldSubmit]);var handleChange=function handleChange(event){event.persist();setValues(function(values){return _objectSpread(_objectSpread({},values),{},_defineProperty({},event.target.name,event.target.value));});setErrors(function(errors){return _objectSpread(_objectSpread({},errors),{},_defineProperty({},event.target.name,\"\"));});};return{handleChange:handleChange,handleSubmit:handleSubmit,values:values,errors:errors};};","map":{"version":3,"names":["useState","useEffect","notification","axios","useForm","validate","_useState","name","email","message","_useState2","_slicedToArray","values","setValues","_useState3","_useState4","errors","setErrors","_useState5","_useState6","shouldSubmit","setShouldSubmit","openNotificationWithIcon","description","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","apiKey","url","options","response","wrap","_callee$","_context","prev","next","preventDefault","process","env","RAPID_API_KEY","console","log","Object","every","x","method","headers","data","sendto","ishtml","title","body","request","sent","t0","error","stop","_x","apply","arguments","keys","length","handleChange","persist","_objectSpread","_defineProperty","target","value"],"sources":["/Users/emecii/Workspace/landy-react-template/src/common/utils/useForm.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { notification } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nexport const useForm = (validate: any) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [shouldSubmit, setShouldSubmit] = useState(false);\r\n\r\n  const openNotificationWithIcon = () => {\r\n    notification[\"success\"]({\r\n      message: \"Success\",\r\n      description: \"Your message has been sent!\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    setErrors(validate(values));\r\n    const apiKey = process.env.RAPID_API_KEY;\r\n    console.log(\"api key is: \" + apiKey);\r\n    const url = \"\";\r\n    if (Object.values(values).every((x) => x !== \"\")) {\r\n      // Configure the email sending options\r\n      const options = {\r\n        method: 'POST',\r\n        url: 'https://mail-sender-api1.p.rapidapi.com/',\r\n        headers: {\r\n          'content-type': 'application/json',\r\n          'X-RapidAPI-Key': apiKey,\r\n          'X-RapidAPI-Host': 'mail-sender-api1.p.rapidapi.com'\r\n        },\r\n        data: {\r\n          sendto: 'evan@chitchat-ai.com',\r\n          ishtml: 'false',\r\n          title: values.email + ' - ' + values.name + ' - is interested in Chitchat',\r\n          body: 'Message: ' + values.message + '\\n\\n' + 'Email: ' + values.email + '\\n\\n' + 'Name: ' + values.name + '\\n\\n'\r\n        }\r\n      };\r\n  \r\n      try {\r\n        const response = await axios.request(options);\r\n        console.log(response.data);\r\n        setShouldSubmit(true); // Set form submit state on successful email send\r\n        // Additional logic for handling success (like resetting the form) goes here\r\n      } catch (error) {\r\n        console.error(error);\r\n        // Handle errors (like showing an error message) here\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && shouldSubmit) {\r\n      setValues((values) => (values = { name: \"\", email: \"\", message: \"\" }));\r\n      openNotificationWithIcon();\r\n    }\r\n  }, [errors, shouldSubmit]);\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n    setErrors((errors) => ({ ...errors, [event.target.name]: \"\" }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}